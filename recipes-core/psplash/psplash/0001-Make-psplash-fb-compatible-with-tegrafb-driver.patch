From 5fdc1018116d432fdd9b84c994fa2745dc4931ab Mon Sep 17 00:00:00 2001
From: Matt Madison <matt@madison.systems>
Date: Wed, 25 Mar 2020 06:16:22 -0700
Subject: [PATCH] Make psplash-fb compatible with tegrafb driver

---
 psplash-fb.c | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/psplash-fb.c b/psplash-fb.c
index 6603572..c744b15 100644
--- a/psplash-fb.c
+++ b/psplash-fb.c
@@ -9,13 +9,20 @@
 
 #include <endian.h>
 #include "psplash.h"
+#include <errno.h>
+
+static int no_pan_display;
+static int no_waitforvsync;
 
 static void
 psplash_wait_for_vsync(PSplashFB *fb)
 {
-  int err = ioctl(fb->fd, FBIO_WAITFORVSYNC, 0);
+  int err;
+  if (no_waitforvsync)
+    return;
+  err = ioctl(fb->fd, FBIO_WAITFORVSYNC, 0);
   if (err != 0)
-    fprintf(stderr, "Error, FB vsync ioctl [%d]\n", err);
+    no_waitforvsync = 1;
 }
 
 void
@@ -34,8 +41,8 @@ psplash_fb_flip(PSplashFB *fb, int sync)
     } else {
       fb->fb_var.yoffset = 0;
     }
-    if (ioctl(fb->fd, FBIOPAN_DISPLAY, &fb->fb_var) == -1 ) {
-      fprintf(stderr, "psplash_fb_flip: FBIOPAN_DISPLAY failed\n");
+    if (!no_pan_display && ioctl(fb->fd, FBIOPAN_DISPLAY, &fb->fb_var) == -1 ) {
+      no_pan_display = 1;
     }
 
     /* Switch the front and back data pointers */
@@ -198,6 +205,7 @@ psplash_fb_new (int angle, int fbdev_id)
   /* Setup double virtual resolution for double buffering */
   if (ioctl(fb->fd, FBIOPAN_DISPLAY, &fb_var) == -1) {
     fprintf(stderr, "FBIOPAN_DISPLAY not supported, double buffering disabled");
+    no_pan_display = 1;
   } else {
     if (fb_var.yres_virtual == fb_var.yres * 2) {
       DBG("Virtual resolution already double");
